(()=>{var q=`
select "name", "type", "sql"
from "sqlite_schema"
where "sql" not null
  and "type" == 'table'
order by "name"
`,y="CREATE TABLE ";function v(n){let e=L(n);if(!e.length)return"";let t=I(n),s=[];return s.push("BEGIN TRANSACTION;"),s.push("PRAGMA writable_schema=ON;"),s.push(...e),s.push(...t),s.push("PRAGMA writable_schema=OFF;"),s.push("COMMIT;"),s.join(`
`)}function L(n){let e=[];return n.each(q,t=>{let s=_(t);s&&e.push(s)}),e}function _(n){if(n.name=="sqlite_sequence")return'DELETE FROM "sqlite_sequence";';if(n.name=="sqlite_stat1")return'ANALYZE "sqlite_schema";';if(n.name.startsWith("sqlite_"))return"";if(n.sql.startsWith("CREATE VIRTUAL TABLE")){let e=n.name.replace("'","''");return`INSERT INTO sqlite_schema(type,name,tbl_name,rootpage,sql)
            VALUES('table','${e}','${e}',0,'${n.sql}');`}else return n.sql.toUpperCase().startsWith(y)?`CREATE TABLE IF NOT EXISTS ${n.sql.substr(y.length)};`:`${n.sql};`}function I(n){let e=[];return n.each(q,t=>{let s=N(n,t);s&&e.push(s)}),e}function N(n,e){if(e.name.startsWith("sqlite_")||e.sql.startsWith("CREATE VIRTUAL TABLE"))return"";e.nameIdent=e.name.replace('"','""');let o=n.execute(`PRAGMA table_info("${e.nameIdent}")`).values.map(u=>u[1]).map(u=>`'||quote("${u.replace('"','""')}")||'`).join(","),a=`SELECT 'INSERT INTO "${e.nameIdent}" VALUES(${o})' as stmt FROM "${e.nameIdent}";`,w=[];return n.each(a,u=>{w.push(`${u.stmt};`)}),w.join(`
`)}var x={toSql:v},g=x;function R(n){let e=0;for(let t=0;t<n.length;t++){let s=n.charCodeAt(t);e=(e<<5)-e+s,e=e&e}return e}function $(n){let e=0;for(let t=0;t<n.length;t++)e=(e<<5)-e+n[t],e=e&e;return e}var C={string:R,uint8Array:$},d=C;var E="new.db",A={version:"select sqlite_version() as version",tables:`select name as "table" from sqlite_schema
      where type = 'table' and name not like 'sqlite_%'`,tableContent:"select * from {} limit 10",tableInfo:`select
      iif(pk=1, '\u2713', '') as pk, name, type, iif("notnull"=0, '\u2713', '') as "null?"
      from pragma_table_info('{}')`};var l=class{constructor(e,t,s,r,o=""){this.id=null,this.owner=null,this.name=e||E,this.path=t,this.capi=s,this.db=r,this.query=o,this.hashcode=0,this.tables=[]}execute(e){if(!e)return null;this.query=e;let t=[];if(this.db.exec({sql:e,rowMode:"object",resultRows:t}),!t.length)return null;let s={columns:Object.getOwnPropertyNames(t[0]),values:[]};for(let r of t)s.values.push(Object.values(r));return s}each(e,t){this.db.exec({sql:e,rowMode:"object",callback:t})}gatherTables(){let e=[];return this.db.exec({sql:A.tables,rowMode:"array",resultRows:e}),e.length?(this.tables=e.map(t=>t[0]),this.tables):(this.tables=[],this.tables)}getTableInfo(e){let t=A.tableInfo.replace("{}",e);return this.execute(t)}calcHashcode(){if(!this.tables.length)return this.hashcode=0,0;let e=this.capi.sqlite3_js_db_export(this.db.pointer),t=d.uint8Array(e),s=d.string(this.query),r=t&s||t||s;return this.hashcode=r,r}get meaningfulName(){return this.name==E?"":this.name}ensureName(){return this.meaningfulName?this.meaningfulName:this.tables.length?(this.name=this.tables[0]+".db",this.name):this.id?(this.name=this.id.substr(0,6)+".db",this.name):this.name}};var i,M={print:console.log,printErr:console.error};async function O(n,e,t){if(i==="loading")return Promise.reject(Error("loading"));if(i===void 0){i="loading",i=await sqlite3InitModule(M);let s=i.capi.sqlite3_libversion();console.log(`Loaded SQLite ${s}`)}return t.type=="local"||t.type=="remote"?t.value.endsWith(".sql")?await P(e,t):await j(e,t):t.type=="binary"?await F(e,t):t.type=="id"?await H(n,t):await B(e,t)}async function B(n,e){console.debug("Creating new database...");let t=new i.oo1.DB;return new l(n,e,i.capi,t)}async function F(n,e){console.debug("Loading database from array buffer...");let t=T(e.value);e.value=null;let s=new l(n,e,i.capi,t);return s.gatherTables(),s}async function j(n,e){console.debug(`Loading database from url ${e.value}...`);let s=await fetch(e.value).then(a=>a.ok?a.arrayBuffer():null).catch(a=>null);if(!s)return null;let r=T(s),o=new l(n,e,i.capi,r);return o.gatherTables(),o}async function P(n,e){console.debug(`Loading SQL from url ${e.value}...`);let s=await fetch(e.value).then(a=>a.ok?a.text():null).catch(a=>null);if(!s)return null;let r=new i.oo1.DB,o=new l(n,e,i.capi,r);return o.execute(s),o.query="",o}async function H(n,e){if(!n)return Promise.reject("Saving to the cloud is not supported");console.debug(`Loading database from gist ${e.value}...`);let t=await n.get(e.value);if(!t)return null;let s=new i.oo1.DB,r=new l(t.name,e,i.capi,s);return r.id=t.id,r.owner=t.owner,r.execute(t.schema),r.query=t.query,r.calcHashcode(),r.ensureName(),r}async function U(n,e,t){if(!n)return Promise.reject("Saving to the cloud is not supported");console.debug("Saving database to gist...");let s=g.toSql(e,t);if(e.query=t,!s&&!t)return Promise.resolve(null);let r=e.hashcode;e.gatherTables(),e.calcHashcode(),e.ensureName();let o;if(!e.id||e.owner!=n.username)o=n.create(e.name,s,e.query);else{if(e.hashcode==r)return Promise.resolve(e);o=n.update(e.id,e.name,s,e.query)}return o.then(a=>Q(e,a))}function Q(n,e){return e.id?(n.id=e.id,n.owner=e.owner,n.path.type="id",n.path.value=`${e.prefix}:${n.id}`,n.ensureName(),n):null}function T(n){let e=new Uint8Array(n),t=i.wasm.allocFromTypedArray(e),s=new i.oo1.DB;return i.capi.sqlite3_deserialize(s.pointer,"main",t,e.length,e.length,i.capi.SQLITE_DESERIALIZE_FREEONCLOSE),s}var S={init:O,save:U};var c=class{constructor(e,t=null){this.value=e,this.type=t||this.inferType(e)}inferType(e){return e?e instanceof ArrayBuffer?"binary":e.startsWith("http://")||e.startsWith("https://")?"remote":e.includes(":")?"id":"local":"empty"}extractName(){if(["binary","id","empty"].includes(this.type))return"";let e=this.value.split("/");return e[e.length-1]}toHash(){return this.type=="local"||this.type=="remote"||this.type=="id"?`#${this.value}`:""}toString(){return this.type=="local"||this.type=="remote"?`URL ${this.value}`:this.type=="binary"?"binary value":this.type=="id"?`ID ${this.value}`:"empty value"}};var W=null,k=(n=0)=>new Promise(e=>setTimeout(e,n)),h=class extends HTMLElement{constructor(){super(),this.database=null,this.loaded=!1}connectedCallback(){this.loaded||(this.path=new c(this.getAttribute("path")),this.name=this.getAttribute("name")||path.extractName(),this.tryLoad())}async tryLoad(){let e=5;for(;e>0;){if(this.loaded=await this.load(),this.loaded)return;await k(1e3),e--}let t="Timeout waiting for SQLite to load";this.error(this.name,t)}async load(){this.loading(this.name);try{let e=await S.init(W,this.name,this.path);if(!e){let t=`Failed to load database from ${this.path}`;return this.error(this.name,t),console.error(t),!0}return this.success(e),!0}catch(e){if(e.message==="loading")return!1;throw this.error(this.name,e),e}}loading(e){this.database=new p(e),m(this.database),f(this.database)}success(e){this.database=e,m(this.database),f(this.database)}error(e,t){this.database=new b(e,t),m(this.database),f(this.database)}},p=class{constructor(e){this.name=e}execute(e){throw new Error("SQLite is still loading, try again in a second")}},b=class{constructor(e,t){this.name=e,this.message=t}execute(e){throw new Error(this.message)}};function m(n){window.Sqlime=window.Sqlime||{},window.Sqlime.db=window.Sqlime.db||{},window.Sqlime.db[n.name]=n}function f(n){let e=new CustomEvent("sqlime-ready",{detail:{name:n.name,database:n}});document.dispatchEvent(e)}window.customElements.get("sqlime-db")||(window.SqlimeDb=h,customElements.define("sqlime-db",h));})();

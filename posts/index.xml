<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>All posts on Anton Zhiyanov</title><link>https://antonz.org/posts/</link><description>Recent content in All posts on Anton Zhiyanov</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 17 Apr 2022 14:50:00 +0000</lastBuildDate><atom:link href="https://antonz.org/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>SQLite CLI command history</title><link>https://antonz.org/sqlite-history/</link><pubDate>Sun, 17 Apr 2022 14:50:00 +0000</pubDate><guid>https://antonz.org/sqlite-history/</guid><description>SQLite command line tool (sqlite3 or sqlite3.exe) remembers the last 2000 executed commands. To repeat the last command, just press the ↑ key, to search for older ones — use Ctrl+R shortcut.
It's faster to find a query than to type it again By default, SQLite stores the history file in the user&amp;rsquo;s home directory and names it .sqlite_history. It&amp;rsquo;s in plain text, so you can view it in your favorite editor.</description></item><item><title>The ultimate SQLite extension set</title><link>https://antonz.org/sqlean/</link><pubDate>Tue, 04 Jan 2022 13:00:00 +0000</pubDate><guid>https://antonz.org/sqlean/</guid><description>I really like SQLite. It&amp;rsquo;s a miniature embedded database, perfect for both exploratory data analysis and as a storage for small apps (I&amp;rsquo;ve blogged about that previously).
It has a minor drawback though. There are few built-in functions compared to PostgreSQL or Oracle. Fortunately, the authors provided an extension mechanism, which allows doing almost anything. As a result, there are a lot of SQLite extensions out there, but they are incomplete, inconsistent and scattered across the internet.</description></item><item><title>What's new in SQLite 3.37</title><link>https://antonz.org/sqlite-3-37/</link><pubDate>Sun, 28 Nov 2021 15:25:00 +0000</pubDate><guid>https://antonz.org/sqlite-3-37/</guid><description>Unlike 3.35, release 3.37 didn&amp;rsquo;t bring many changes. But among them is one of the most important in the history of SQLite: the &amp;ldquo;strict&amp;rdquo; table mode, in which the engine makes sure that the data in the column matches the type.
Perhaps now SQLite will no longer be called &amp;ldquo;the JavaScript of the DBMS world&amp;rdquo; ツ But let&amp;rsquo;s take it one piece at a time.
The problem with types SQLite supports 5 data types:</description></item><item><title>How Python list really works</title><link>https://antonz.org/list-internals/</link><pubDate>Fri, 12 Nov 2021 17:55:00 +0000</pubDate><guid>https://antonz.org/list-internals/</guid><description>This post is largely about the arrays — the #1 data structure in the world. If you are not a data structure guru yet, I guarantee that you will better understand Python lists, their advantages and limitations. If you already know everything — there is no harm in refreshing the key points.
Everybody knows how to work with lists in Python:
&amp;gt;&amp;gt;&amp;gt; guests = [&amp;#34;Frank&amp;#34;, &amp;#34;Claire&amp;#34;, &amp;#34;Zoe&amp;#34;] &amp;gt;&amp;gt;&amp;gt; guests[1] &amp;#39;Claire&amp;#39; Surely you know that selecting an item by index — guests[idx] — works instantly even on a million elements list.</description></item><item><title>SQLite playground in the browser</title><link>https://antonz.org/sqlite-playground/</link><pubDate>Mon, 04 Oct 2021 10:40:00 +0000</pubDate><guid>https://antonz.org/sqlite-playground/</guid><description>What I&amp;rsquo;ve always lacked is something similar to JSFiddle, but for SQLite. An online playground to quickly test an SQL query and share it with others.
Here is what I wanted:
Binary database import, not just SQL schema. Support both local and remote databases (by url). Save the database and queries in the cloud. Free of charge, no sign-up required. The latest version of SQLite. Minimalistic and mobile friendly. So I&amp;rsquo;ve built SQLime — an online SQLite playground for debugging and sharing SQL snippets.</description></item><item><title>Good Code Criterion</title><link>https://antonz.org/good-code/</link><pubDate>Wed, 02 Jun 2021 11:00:00 +0000</pubDate><guid>https://antonz.org/good-code/</guid><description>Good code is understandable and non-greedy. Let&amp;rsquo;s talk about it.
Time to understanding The main criterion for good code is the time T it takes for a non-author to understand the code. Not &amp;ldquo;I sorta get it&amp;rdquo;, but understand deep enough to make changes and not break anything.
The smaller the T, the better the code.
Let&amp;rsquo;s say Alice and Bob implemented the same feature, and you want to modify it.</description></item><item><title>Data Visualization Guide</title><link>https://antonz.org/dataviz-guide/</link><pubDate>Sat, 10 Apr 2021 20:00:00 +0000</pubDate><guid>https://antonz.org/dataviz-guide/</guid><description>Today I&amp;rsquo;ve come across a perfect information graphics / data visualization guide:
Based on the works of Edward Tufte and Stephen Few. Comprehensive yet not too wordy (150 pages). Highly practical and with lots of examples (197 figures). The book provides advice on designing clear, concise, and actionable reports and dashboards:
How to articulate the message. How to choose an appropriate chart type. How to design specific chart elements.</description></item><item><title>How to make an awesome Python package in 2021</title><link>https://antonz.org/python-packaging/</link><pubDate>Tue, 06 Apr 2021 20:30:00 +0300</pubDate><guid>https://antonz.org/python-packaging/</guid><description>If you are like me, every once in a while you write a useful python utility and want to share it with your colleagues. The best way to do this is to make a package: it easy to install and saves from copy-pasting.
If you are like me, you might be thinking that creating packages is a real headache. Well, that&amp;rsquo;s not the case anymore. And I am going to prove it with this step-by-step guide.</description></item><item><title>SQLite is not a toy database</title><link>https://antonz.org/sqlite-is-not-a-toy-database/</link><pubDate>Thu, 25 Mar 2021 09:00:00 +0000</pubDate><guid>https://antonz.org/sqlite-is-not-a-toy-database/</guid><description>English • Russian • Spanish
Whether you are a developer, data analyst, QA engineer, DevOps person, or product manager - SQLite is a perfect tool for you. Here is why.
A few well-known facts to get started:
SQLite is the most common DBMS in the world, shipped with all popular operating systems. SQLite is serverless. For developers, SQLite is embedded directly into the app. For everyone else, there is a convenient database console (REPL), provided as a single file (sqlite3.</description></item><item><title>How to create a 1M record table with a single query</title><link>https://antonz.org/random-table/</link><pubDate>Sun, 21 Mar 2021 21:15:00 +0000</pubDate><guid>https://antonz.org/random-table/</guid><description>Let&amp;rsquo;s say you want to check how a query behaves on a large table - but there is no such table at hand. This is not a problem if your DBMS supports SQL recursion: lots of data can be generated with a single query. The WITH RECURSIVE clause comes to the rescue.
I&amp;rsquo;m going to use SQLite, but the same (or similar) queries will work for PostgreSQL and other DBMSs. Specifically, WITH RECURSIVE is supported in MariaDB 10.</description></item></channel></rss>